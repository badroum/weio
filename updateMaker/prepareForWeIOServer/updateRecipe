#!/usr/bin/python

import urllib2, urllib, subprocess, platform, json, hashlib, os, shutil

def startDownload(fwUrl, targetFile):
    print "download init"
    try:
        req = urllib2.Request(fwUrl)
        handle = urllib2.urlopen(req)
    except urllib2.HTTPError, e:
        print "Can't download firmware, error code - %s." % e.code
        return
    except urllib2.URLError:
        print "Bad URL for firmware file: %s" % fwUrl
        return
    else:
        print "download starts"
        urllib.urlretrieve(fwUrl, targetFile)
        print "download finished"

def getMd5sum(filename):
    md5 = hashlib.md5()
    with open(filename,'rb') as f:
        for chunk in iter(lambda: f.read(128*md5.block_size), b''):
             md5.update(chunk)
    return md5.hexdigest()

def getJsonFromDisk(path):
    inputFile = open(path, 'r')
    rawData = inputFile.read()
    inputFile.close()
    return json.loads(rawData)

targetPath = None

if (platform.machine() == 'mips') :
    # On WeIO save to RAM
     targetPath = "/tmp"
else:
    # On PC save in the place
    targetPath = "./"

# Kill WeIO at FIRST!
p = subprocess.Popen(["/etc/init.d/weio_run", "stop"])
print p.communicate()

# Now we can start update procedure

# SAFE HOUSE
# Backup config.weio and userProjects
# this will be backuped after flashing with run_weio script (first time)
if (platform.machine() == 'mips') :
    bckpdir = "/weioUserBackup"
    # kill all symlinks in user projects otherwise it's not possible to move them or copy
    p = subprocess.Popen(["sh", "/weio/scripts/killUserProjectSymlinks.sh"])
    print p.communicate()
    # move user projects to the backup directory
    shutil.move("/weioUser/flash", bckpdir)
    # add config.weio to the safe house
    shutil.copyfile("/weio/config.weio", bckpdir+"/config.weio")

# DOWNLOADING PROCEDURE
# get json to extract MD5 data
print "getting JSON configuration from WeIO server"
startDownload("http://www.puzzle-lab.com/downloads/update/updateWeio.json", targetPath+"/updateWeio.json")

data = getJsonFromDisk(targetPath+"/updateWeio.json")

print "\ngetting new firmware from WeIO server"
startDownload(data["recovery"]["download_url"], targetPath+"/weio_recovery.bin")
recoveryMd5Distant = data["recovery"]["md5"]
recoveryMd5Local = getMd5sum(targetPath+"/weio_recovery.bin")

# SYSTEM UPGRADE
if (recoveryMd5Distant == recoveryMd5Local):
    print "MD5 matches. Starting sysupgrade procedure"
    if (platform.machine() == 'mips') :
        print "killing WeIO application to free RAM"
        # start upgrade
        p = subprocess.Popen(["sysupgrade", "-v", targetPath+"/weio_recovery.bin"])
        print p.communicate()
    else:
        print "Doing nothing on PC, exiting"
        exit()
